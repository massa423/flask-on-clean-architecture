[tool.poetry]
name = "flack-on-clean-architecture"
version = "0.1.0"
description = "Example flask app on clean architecture"
authors = ["Suzuki Masaya <ikachang-kawaii@nifty.com>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.9"
Flask = "^3.0.0"
uWSGI = "^2.0.19"
Flask-SQLAlchemy = "^3.0.0"
pydantic = "^2.0.0"
email-validator = "^2.0.0"
psycopg2 = "^2.8.6"
injector = "^0.22.0"
Flask-Injector = "^0.15.0"
flasgger = "^0.9.5"

[tool.poetry.dev-dependencies]
mypy = "^1.0.0"
pytest = "^8.0.0"
flake8 = "^7.0.0"
black = "^21.12b0"
isort = "^6.0.0"
pysen = "^0.11.0"
pre-commit = "^4.0.0"
pytest-mock = "^3.5.1"
pytest-cov = "^2.11.1"
pytest-freezegun = "^0.4.2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pysen]
version = "0.10.1"

[tool.pysen.lint]
enable_black = true
enable_flake8 = true
enable_isort = true
enable_mypy = true
mypy_preset = "strict"
line_length = 119
py_version = "py39"

[[tool.pysen.lint.mypy_targets]]
  paths = ["app/"]

[tool.pysen.lint.source]
  includes = ["app/", "tests/"]
